WEBVTT
Kind: captions
Language: zh-Hans

00:00:14.709 --> 00:00:19.310
您还记得第一次意识到自己的计算机不只是一台计算机吗？

00:00:19.310 --> 00:00:23.630
显示器和键盘，介于鼠标单击和在那里播放的视频之间

00:00:23.630 --> 00:00:28.420
是能够捕捉到您的意图并将其变为现实的东西

00:00:28.420 --> 00:00:33.940
gremlins是什么东西，让我们想象一下，我们可以缩小到

00:00:33.940 --> 00:00:38.440
电子的大小，然后将自身注入鼠标的单击中

00:00:38.440 --> 00:00:42.640
将鼠标拆开，您会发现它确实是一台非常简单的机器

00:00:42.640 --> 00:00:47.290
几个按钮和一个用于检测运动和距离的系统

00:00:47.290 --> 00:00:51.100
有一个光电鼠标，可以通过灯光和传感器进行这些测量，但是

00:00:51.100 --> 00:00:54.909
较旧的人用硬橡胶球和一些塑料轮来做到这一点

00:00:54.909 --> 00:00:59.230
概念，当您单击鼠标上的按钮时，它会向

00:00:59.230 --> 00:01:02.920
单击鼠标时，有关其位置信息的计算机

00:01:02.920 --> 00:01:07.750
接收到的信息由基本输入/输出子系统处理

00:01:07.750 --> 00:01:12.850
基本上就像计算机的眼睛，耳朵，嘴巴和手一样

00:01:12.850 --> 00:01:16.810
为计算机提供了一种与其环境进行交互的方式，但是

00:01:16.810 --> 00:01:21.039
还可以起到缓冲作用，以防止CPU被干扰所淹没

00:01:21.039 --> 00:01:25.300
在这种情况下，I / O子系统会确定您的鼠标单击很漂亮

00:01:25.300 --> 00:01:31.170
重要，因此它会产生对CPU的中断，嘿CB，请单击此处

00:01:31.170 --> 00:01:36.850
CPU或中央处理器只是整个计算机的大脑

00:01:36.850 --> 00:01:40.659
就像您的大脑不占用您的整个身体，CPU不占用

00:01:40.659 --> 00:01:46.570
整个计算机，但运行相同的节目，而CPU则完成其整个工作

00:01:46.570 --> 00:01:51.549
正在从内存中获取指令并执行它们，因此在您键入时

00:01:51.549 --> 00:01:56.799
打字可能真的非常快，例如CPU每分钟要提取60个单词，

00:01:56.799 --> 00:02:02.130
每秒执行数十亿条指令是每秒数十亿条指令

00:02:02.130 --> 00:02:06.310
在屏幕上四处移动鼠标以运行该时钟小部件的说明

00:02:06.310 --> 00:02:10.600
在桌面上播放网络广播，管理您正在编辑的文件

00:02:10.600 --> 00:02:15.070
硬盘驱动器，更重要的是，您的计算机的CPU是

00:02:15.070 --> 00:02:19.299
多任务处理程序，但是哦，我的天哪，有一个非常重要的鼠标单击动作即将到来

00:02:19.299 --> 00:02:23.980
到现在为止，让我们现在丢弃所有内容并处理其中的程序

00:02:23.980 --> 00:02:28.480
对于CPU为鼠标执行特殊程序的所有操作，

00:02:28.480 --> 00:02:32.019
时钟小部件，用于互联网广播和处理由

00:02:32.019 --> 00:02:35.290
键盘每个程序最初都是由

00:02:35.290 --> 00:02:41.560
以人类可读的编程语言（例如Java C ++或Python）编写，但

00:02:41.560 --> 00:02:44.690
人工程序占用了很多空间并且包含了很多

00:02:44.690 --> 00:02:49.489
将不必要的信息存储到计算机上，以便对其进行编译并缩小尺寸，

00:02:49.489 --> 00:02:54.860
 CPU意识到以1和0的位存储在内存中

00:02:54.860 --> 00:02:58.640
有关如何处理此鼠标单击的说明，以便它查找地址

00:02:58.640 --> 00:03:02.120
鼠标程序，并向内存子系统发送请求以用于

00:03:02.120 --> 00:03:07.069
指令存储在鼠标设备中的每个指令

00:03:07.069 --> 00:03:11.720
驱动程序已被适当地获取并执行，但这还远远没有结束

00:03:11.720 --> 00:03:15.920
因为当光标在

00:03:15.920 --> 00:03:20.300
监视器屏幕上的按钮图片，因此CPU要求内存

00:03:20.300 --> 00:03:25.130
监视程序以找出该按钮是什么，然后CPU必须

00:03:25.130 --> 00:03:29.030
向程序询问用于按钮的程序的内存，这意味着CPU需要

00:03:29.030 --> 00:03:33.440
再次监视程序以显示与按钮关联的视频，等等

00:03:33.440 --> 00:03:37.760
可以这么说，之前涉及很多程序

00:03:37.760 --> 00:03:42.319
您甚至可以看到单击该按钮时屏幕上的按钮会亮起，因此

00:03:42.319 --> 00:03:46.370
单击鼠标的简单任务意味着访问所有关键组件

00:03:46.370 --> 00:03:50.269
计算机架构外围设备的基本输入/输出

00:03:50.269 --> 00:03:57.220
系统的CPU程序和内存，而不是一个gremlin

00:03:59.130 --> 00:04:01.190
你

